name: Build and deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v1.2.0

      - name: Install prerequisite packages for building
        run: |
          sudo apt-get update
          sudo apt-get install \
            libjsoncpp-dev \
            postgresql-server-dev-12 \
            libfmt-dev \
            libc-ares-dev \
            libssl-dev \
            openssl

      - name: Build
        run: |
          mkdir cmake-build-release
          cd cmake-build-release
          cmake -DCMAKE_BUILD_TYPE=Release -G "CodeBlocks - Unix Makefiles" ..
          cd ..
          cmake --build ./cmake-build-release --target dark_triad_database_api -- -j $(nproc)

      - name: Install prerequisite packages for deployment
        run: |
          sudo rm -rf /etc/docker
          sudo snap refresh
          sudo snap install docker
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Deploy
        env:
          HEROKU_API_KEY: ${{ secrets.heroku_api_key }}
        run: |
          sudo docker build --tag registry.heroku.com/dark-triad-db/web --build-arg postgres_username=${{ secrets.postgres_username }} --build-arg postgres_password=${{ secrets.postgres_password }} --build-arg commit_hash=$GITHUB_SHA --build-arg app_api_key=${{ secrets.app_api_key }} .
          echo ${{ secrets.heroku_api_key }} | sudo docker login --username=${{ secrets.heroku_username }} --password-stdin registry.heroku.com
          sudo docker push registry.heroku.com/dark-triad-db/web
          heroku container:release web --app=dark-triad-db

      - name: Verify deployment
        run: |
          sleep_duration_in_s=10
          echo Waiting $sleep_duration_in_s seconds for deployment to take effect...
          sleep 10
          response=$(curl https://dark-triad-db.herokuapp.com/status/details)
          echo Response: $response
          echo Commit hash: $GITHUB_SHA
          if [[ ! "$response" == *"$GITHUB_SHA"* ]]; then echo "Commit hash of deployed version doesn't match!" && exit 1; fi

  test:
    name: Integration tests
    needs: build-and-deploy
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v1.2.0
        with:
          fetch-depth: 1

      - name: Install prerequisite packages for integration testing
        run: sudo apt-get install openjdk-11-jre-headless

      - name: Run integration tests
        env:
          API_KEY: ${{ secrets.app_api_key }}
          ENV: prod
        run: ./run_karate_tests.sh

  rollback:
    name: Rollback to previous version
    needs: test
    if: failure()
    runs-on: ubuntu-20.04
    steps:
      - name: Install prerequisite packages for rollback
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Heroku rollback
        env:
          HEROKU_API_KEY: ${{ secrets.heroku_api_key }}
        run: heroku rollback --app=dark-triad-db